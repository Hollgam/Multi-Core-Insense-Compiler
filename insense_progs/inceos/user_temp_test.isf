// Simple Insense program that gets tempertaure sensor readings and
// sends these over the radio using the broadcast primitive 

// Interface for Temperature Broadcaster
type ITempBroadcast is interface (
		out bool tempRequest ;
		in integer tempValue ; 
		out any broadcastSend ;
		in integer button
)

// Temperature Broadcaster component
component TempBroadcast presents ITempBroadcast {
	
	constructor() {
	}
	
	behaviour {
	
		receive press from button
		
		// get solar sensor reading
		send true on tempRequest
		receive reading from tempValue
		printString("Got reading: ")
		printInt(reading)
		printString("\nSending on broadcast channel\n")
		send any(reading) on broadcastSend
		printString("Broadcast send done\n")
	}
} 

/*************************************************************************************************/	
// Simple Insense program that receives temperature readings from the radio 

// Interface for TempReceiver
type ITempReceiver is interface ( in RadioPacket radioReceive )

// Temp Receiver component
component TempReceiver presents ITempReceiver {
	
	constructor() {
	}
	
	behaviour {
		// wait for packet from Radio
		receive packet from radioReceive
		
		// Print out packet address and payload
		printString("Got reading from node ")
		printUnsignedInt(packet.addr)
		printString(": ")
		project packet.payload as reading onto
			integer	: { printInt(  reading ) }
			real 	: { printReal( reading ) }
			default : { printString( "???" ) }
		printString("\n")
	}
} 

tr = new TempReceiver()
connect tr.radioReceive to radio.received

tbc = new TempBroadcast()

connect tbc.tempRequest to sensors.tempRequest
connect tbc.tempValue to sensors.tempOut
connect tbc.broadcastSend to radio.broadcastSend
connect tbc.button 		to buttonSensor.output