/*
 *  Insense components bouncing arrays to each other.
 *	Multiple instances of two components are connected to form a complex topology.
 *
 *
 * Copyright (c) 2013, Pavlo Bazilinskyy <pavlo.bazilinskyy@gmail.com>
 * School of Computer Science, St. Andrews University
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
 
type Ialpha is interface( in integer input ; out integer[] output )
type Ibeta  is interface( in integer[] input ; out integer output )

// Sends an array, receives an integer and then prints it
component alpha presents Ialpha {
	id = 0
	array1 = new integer[20] of 1

	constructor(integer idNum){
		id := idNum
	}

	behaviour{
		send array1 on output 
		receive x from input
		
		printString("a")
		printInt(id)
		printString(": ")
		printInt(x)
		printString("\n")
	}
}

// Sends an integer, receives an array and then prints the zeroth element of it
component beta presents Ibeta {
	id = 0
	
	constructor(integer idNum){
		id := idNum
	}

	behaviour{
		receive array1 from input
		
		printString("b")
		printInt(id)
		printString(": ")
		printInt(array1[0])
		printString("\n")

		send 2 on output
	}
}

// Create instances of components
a1 = new alpha(1)
b1 = new beta(1)
a2 = new alpha(2)
a3 = new alpha(3)
b2 = new beta(2)

// Connect channels
connect a1.output to b1.input
connect a1.input to b1.output

connect a1.input to b2.output
connect a1.output to b2.input

connect a2.input to b2.output
connect a2.output to b2.input

connect a2.input to b1.output
connect a2.output to b1.input

connect a3.output to b1.input
connect a3.input to b2.output